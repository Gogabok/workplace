! function () {
  var e = angular;
  e.module("myop.data", []), e.module("myop.ctrl", []), e.module("myop", ["tc.chartjs", "ngAnimate", "ngCookies", "ngMaterial", "myop.data", "myop.ctrl"]).config(["$mdGestureProvider", function (e) {
    e.skipClickHijack()
  }]).run(["myopData", "$rootScope", "$cookies", function (e, t, a) {
    "" != e.getUrlParameter("reset") && (a.remove("user"), t.user = {}), t.user = a.getObject("user") || e.newUser()
  }])
}(),
  function () {
    var e;
    angular.module("myop.data").factory("myopData", ["$rootScope", "$cookies", "$sce", "$http", function (e, t, a, r) {
      return {
        newUser: function () {
          var e = window.navigator.userlanguage || window.navigator.language,
            t;
          return e = (e = e.toLowerCase()).substr(0, 2), langs = ["en", "zh", "es", "it", "he", "pt", "vn", "jp"], -1 == langs.indexOf(e) && (e = "en"), {
            fname: "",
            lname: "",
            email: "",
            lang: e
          }
        },
        getExpDate: function () {
          var e = new Date,
            t;
          return new Date(e.getFullYear(), e.getMonth() + 12, e.getDate())
        },
        setUserProperty: function (a, r) {
          e.user[a] = r, t.putObject("user", e.user, {
            expires: this.getExpDate()
          })
        },
        saveUser: function () {
          this.updateMailChimp(e.user), t.putObject("user", e.user, {
            expires: this.getExpDate()
          })
        },
        getLegal: function (e, t) {
          var a = "data/" + e + "_" + t + ".html";
          return r.get(a)
        },
        getCalculator: function (e) {
          var t = "lib/php/api.php";
          return r.post(t, e)
        },
        getChart: function (e) {
          var t;
          return suggMax = 0, suggMin = e.treatment.chart.prog_re[e.treatment.chart.prog_re.length - 1] + (0 - e.treatment.chart.prog_ci[e.treatment.chart.prog_ci.length - 1]), {
            config: {
              responsive: !0,
              legend: {
                display: !0,
                position: "top"
              },
              scales: {
                xAxes: [{
                  display: !0,
                  scaleLabel: {
                    display: !0,
                    labelString: e.labels.xAxis
                  }
                }],
                yAxes: [{
                  display: !0,
                  scaleLabel: {
                    display: !0,
                    labelString: e.labels.yAxis
                  },
                  ticks: {
                    beginAtZero: !1,
                    suggestedMax: suggMax,
                    suggestedMin: suggMin,
                    stepValue: 1,
                    stepSize: 1,
                    userCallback: function (e, t, a) {
                      return e.toFixed(2)
                    }
                  }
                }]
              },
              annotation: {
                annotations: [{
                  type: "box",
                  xScaleID: "x-axis-0",
                  xMin: e.gryBox[0],
                  xMax: e.gryBox[1],
                  backgroundColor: "rgba(0,0,0,0.03)",
                  borderWidth: 0,
                  borderColor: "rgba(0,0,0,0)"
                }]
              }
            },
            data: {
              labels: e.ageRange,
              datasets: [{
                label: e.labels.legend[0],
                fill: !1,
                data: e.treatment.chart.ctrl_re,
                width: e.treatment.chart.ctrl_ci,
                borderColor: "rgba(57, 181, 74, 1)",
                backgroundColor: "rgba(57, 181, 74, 0.4)",
                borderWidth: 1,
                pointRadius: 0
              }, {
                label: e.labels.legend[1],
                fill: !1,
                data: e.treatment.chart.prog_re,
                width: e.treatment.chart.prog_ci,
                borderColor: "rgba(237, 28, 36, 1)",
                backgroundColor: "rgba(237, 28, 36, 0.4)",
                borderWidth: 1,
                pointRadius: 0
              }]
            }
          }
        },
        cleanHtml: function (e, t, r) {
          if (e) return void 0 !== t && (e = e.replace("#age#", "<strong>" + t + "</strong>")), void 0 !== r && (e = e.replace("#ctrl#", "<strong>" + r + "%</strong>")), a.trustAsHtml(e)
        },
        treatmentSlug: function (e) {
          var t = "";
          switch (e) {
            case "1":
              t = "multifocal-soft-contact-lenses";
              break;
            case "2":
              t = "peripheral-defocus-spectacles";
              break;
            case "3":
              t = "executive-bifocals";
              break;
            case "4":
              t = "progressive-addition-spectacles";
              break;
            case "5":
              t = "orthokeratology";
              break;
            case "6":
              t = "low-dose-atropine";
              break;
            case "7":
              t = "high-dose-atropine";
              break;
            case "8":
              t = "combined-treatment";
              break;
            default:
              t = "unknown"
          }
          return t
        },
        slugifyRE: function (e) {
          return e.toString().toLowerCase().trim().replace(/[^\w\s-]/g, "").replace(/[\s_-]+/g, "").replace(/^-+|-+$/g, "")
        },
        getVirtualPageUrl: function (e) {
          var t = "";
          return angular.equals(e, {}) ? t = "/" : (t += "/" + e.lang, t += "/" + e.ethnic, t += "/" + this.treatmentSlug(e.treatId), t += "/" + e.age, t += "/" + this.slugifyRE(e.re), t += "/" + e.ctrl, t += "/" + (e.reviewed ? "reviewed" : "unreviewed")), t
        },
        updateMailChimp: function (e) {
          var t = "/lib/php/mailchimp.php";
          return r.post(t, e)
        },
        getUrlParameter: function (e) {
          e = e.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
          var t, a = new RegExp("[\\?&]" + e + "=([^&#]*)").exec(location.search);
          return null === a ? "" : decodeURIComponent(a[1].replace(/\+/g, " "))
        }
      }
    }])
  }(),
  function () {
    var e;
    angular.module("myop.ctrl").controller("myopUser", ["myopData", "$rootScope", function (e, t) {
      var a = this;
      a.loggedIn = !1, t.user.email.length && (a.loggedIn = !0), a.error = "", a.login = function () {
        t.user.fname.length && t.user.lname.length && t.user.email.length && t.user.lang.length && (e.saveUser(), a.loggedIn = !0)
      }, a.setLang = function (t) {
        t && e.setUserProperty("lang", t)
      }, a.langDir = function (e) {
        return "he" == e ? "rtl" : "ltr"
      }
    }])
  }(),
  function () {
    var e;
    angular.module("myop.ctrl").controller("myopLegal", ["myopData", "$rootScope", function (e, t) {
      var a = this;
      a.mode = e.getUrlParameter("text") || "terms", a.code = "", a.getLegal = function () {
        e.getLegal(a.mode, t.user.lang).then(function (t) {
          a.code = e.cleanHtml(t.data)
        })
      }, a.getLegal()
    }])
  }(),
  function () {
    var e;
    angular.module("myop.ctrl").controller("myopCtrl", ["myopData", "$timeout", "$window", "$location", "$rootScope", function (e, t, a, r, o) {
      var n = this;
      n.loaded = !1, n.myop = {}, n.myop.slider = null, n.myop.input = {}, n.setCalculator = function (a) {
        switch (n.myop.input.lang = o.user.lang, a) {
          case "slide":
            n.myop.input.ctrl = n.myop.slider;
            break
        }
        e.getCalculator(n.myop.input).then(function (a) {
          n.myop = a.data, t(function () {
            n.myop.slider = n.myop.input.ctrl
          }, 10, !0), n.myop.chart = e.getChart(n.myop), n.toggleModal(), n.trackView(n.myop.input, n.loaded), n.loaded = !0
        }).catch(function (e) {
          console.error("API error", e.status, e.data), setTimeout(n.setCalculator, 500)
        })
      }, n.setCalculator(), n.toggleModal = function (e) {
        "off" == e ? (n.showModal = !1, n.myop.discText = "", n.myop.input.optin = !0) : n.showModal = !(!n.myop.discText || !n.myop.discText.length)
      }, n.getHtml = function (t, a, r) {
        return e.cleanHtml(t, a, r)
      }, n.trackView = function (t, r) {
        if ("object" == typeof a.dataLayer) {
          var n = window.location.pathname,
            l = window.location.search,
            i = o.user.email ? o.user.email : "Unknown",
            s = "/" + o.user.lang;
          n.indexOf("legal") > -1 ? s += n + l : r && o.user.email && (s = e.getVirtualPageUrl(t)), dataLayer.push({
            event: "VirtualPageView",
            virtualPageURL: s,
            virtualPageTitle: i
          })
        }
      }
    }])
  }();
//# sourceMappingURL=app.min.js.map